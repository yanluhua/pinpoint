syntax = "proto3";

import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";
//import "Trace.proto";

option java_multiple_files = true;
option java_package = "com.navercorp.pinpoint.grpc.trace";
option java_outer_classname = "CommandProto";
//option objc_class_prefix = "PIN";

package v1;

service ProfilerCommandService {
    rpc HandleCommand (stream PCmdMessage) returns (stream PCmdRequest) {
    }

    rpc CommandEcho (PCmdEchoResponse) returns (google.protobuf.Empty) {
    }
}

enum PCommandType {
    NONE = 0;

    PING = 100;
    PONG = 101;

    ECHO = 710;
}

message PCmdMessage {
    oneof message {
        PCmdServiceHandshake handshakeMessage = 1;
        PCmdResponse failMessage = 2;
    }
}

message PCmdServiceHandshake {
    // initial message
    repeated int32 supportCommandServiceKey = 1;
}

message PCmdResponse {
    int32 responseId = 1;
    int32 status = 2;
    google.protobuf.StringValue message = 3;
}

message PCmdRequest {
    int32 requestId = 1;

    oneof command {
        PCmdEcho commandEcho = 710;
    }
}

message PCmdEcho {
    string message = 1;
}

message PCmdEchoResponse {
    PCmdResponse commonResponse = 1;
    string message = 2;
}

enum PThreadDumpType {
    TARGET = 0;
    PENDING = 1;
}

message PCommandThreadDump {
    PThreadDumpType type = 1;
    string name = 2;
    int64 pendingTimeMillis = 3;
}

enum PThreadState {
    NEW = 0;
    RUNNABLE = 1;
    BLOCKED = 2;
    WAITING = 3;
    TIMED_WAITING = 4;
    TERMINATED = 5;
    UNKNOWN = 6;
}

message PMonitorInfo {
    int32 stackDepth = 1;
    string stackFrame = 2;
}

message PThreadDump {
    string threadName = 1;
    int64 threadId = 2;
    int64 blockedTime = 3;
    int64 blockedCount = 4;
    int64 waitedTime = 5;
    int64 waitedCount = 6;
    string lockName = 7;
    int64 lockOwnerId = 8;
    string lockOwnerName = 9;
    bool inNative = 10;
    bool suspended = 11;
    PThreadState threadState = 12;
    repeated string stackTrace = 13;
    repeated PMonitorInfo lockedMonitors = 14;
    repeated string lockedSynchronizers = 15;
}

message PThreadLightDump {
    string threadName = 1;
    int64 threadId = 2;
    PThreadState threadState = 3;
}

message PCommandThreadDumpResponse {
    repeated PThreadDump threadDumps = 1;
}


message PCmdActiveThreadCount {
}

message PCmdActiveThreadCountRes {
    int32 histogramSchemaType = 1;
    repeated int32 activeThreadCount = 2;
    int64 timeStamp = 3;
}

message PActiveThreadDump {
    int64 startTime = 1;
    int64 localTraceId = 2;
    PThreadDump threadDump = 3;
    bool sampled = 4;
    string transactionId = 5;
    string entryPoint = 6;
}

message PActiveThreadLightDump {
    int64 startTime = 1;
    int64 localTraceId = 2;
    PThreadLightDump threadDump = 3;
    bool sampled = 4;
    string transactionId = 5;
    string entryPoint = 6;
}

message PCmdActiveThreadDump {
    int32 limit = 1;
    repeated string threadNameList = 2;
    repeated int64 localTraceIdList = 3;
}

message PCmdActiveThreadLightDump {
    int32 limit = 1;
    repeated string threadNameList = 2;
    repeated int64 localTraceIdList = 3;
}

message PCmdActiveThreadDumpRes {
    repeated PActiveThreadDump threadDumps = 1;
    string type = 2;
    string subType = 3;
    string version = 4;
}

message PCmdActiveThreadLightDumpRes {
    repeated PActiveThreadLightDump threadDumps = 1;
    string type = 2;
    string subType = 3;
    string version = 4;
}
